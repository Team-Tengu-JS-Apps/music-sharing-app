{"version":3,"sources":["../../../public/scripts/data.js"],"names":["dataService","USERNAME_KEY","AUTH_KEY","YT_DATA_API_KEY","register","user","reqUser","username","passHash","sha1","password","toString","post","data","then","resp","result","localStorage","setItem","authKey","signIn","options","put","signOut","Promise","resolve","removeItem","hasUser","getItem","getUsers","get","getSongs","headers","addSong","song","getAllSongs","query","id","requestURL","getById","deleteById","delete","getComments","comments","postComment","text","comment","rateSong","stars","getTopSongs","count","users","songs","all","add","getTop","rate","ytData","tests","del"],"mappings":"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","file":"data.js","sourcesContent":["import {jsonRequester} from 'requester';\r\n\r\nconst dataService = (function () {\r\n    const USERNAME_KEY = 'signed-in-user-username';\r\n    const AUTH_KEY = 'signed-in-user-auth-key';\r\n    const YT_DATA_API_KEY = `AIzaSyD1eKGLdYJkdiBntvU5nR2zOd8K-y6M2O8`;\r\n\r\n    /* Users */\r\n\r\n    function register(user) {\r\n        const reqUser = {\r\n            username: user.username,\r\n            passHash: sha1(user.username + user.password).toString()\r\n        };\r\n\r\n        return jsonRequester.post('api/users', {\r\n            data: reqUser\r\n        })\r\n            .then(function (resp) {\r\n                const user = resp.result;\r\n                localStorage.setItem(USERNAME_KEY, user.username);\r\n                localStorage.setItem(AUTH_KEY, user.authKey);\r\n                return {\r\n                    username: resp.result.username\r\n                };\r\n            });\r\n    }\r\n\r\n    function signIn(user) {\r\n        const reqUser = {\r\n            username: user.username,\r\n            passHash: sha1(user.username + user.password).toString()\r\n        };\r\n\r\n        const options = {\r\n            data: reqUser\r\n        };\r\n\r\n        return jsonRequester.put('api/users/auth', options)\r\n            .then(function (resp) {\r\n                const user = resp.result;\r\n                localStorage.setItem(USERNAME_KEY, user.username);\r\n                localStorage.setItem(AUTH_KEY, user.authKey);\r\n                return user;\r\n            });\r\n    }\r\n\r\n    function signOut() {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                localStorage.removeItem(USERNAME_KEY);\r\n                localStorage.removeItem(AUTH_KEY);\r\n            });\r\n    }\r\n\r\n    function hasUser() {\r\n        return !!localStorage.getItem(USERNAME_KEY) &&\r\n            !!localStorage.getItem(AUTH_KEY);\r\n    }\r\n\r\n    function getUsers() {\r\n        return jsonRequester.get('api/users')\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    /* Songs */\r\n\r\n    function getSongs() {\r\n        const options = {\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n        return jsonRequester.get('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function addSong(song) {\r\n        const options = {\r\n            data: song,\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.post('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function getAllSongs() {\r\n        const options = {\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.get('api/songs/all', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    /*YouTube queries*/\r\n\r\n    function query(id) {\r\n        const requestURL = `https://www.googleapis.com/youtube/v3/videos?part=statistics&id=${id}&key=${YT_DATA_API_KEY}`;\r\n        return jsonRequester.get(requestURL);\r\n    }\r\n\r\n    /*Tests*/\r\n\r\n    function getById(id) {\r\n        const options = {\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.get('api/songs/' + id, options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function deleteById(id) {\r\n        const options = {\r\n            data: {\r\n                id: id,\r\n                delete: true\r\n            },\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.delete('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function getComments(id) {\r\n        const options = {\r\n            data: {\r\n                id: id,\r\n                comments: true\r\n            },\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.post('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function postComment(id, text) {\r\n        const options = {\r\n            data: {\r\n                id: id,\r\n                comment: text || ''\r\n            },\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.post('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function rateSong(id, stars) {\r\n        const options = {\r\n            data: {\r\n                id: id,\r\n                stars: +stars || 0\r\n            },\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.post('api/songs', options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    function getTopSongs(count) {\r\n        const options = {\r\n            headers: {\r\n                'x-auth-key': localStorage.getItem(AUTH_KEY)\r\n            }\r\n        };\r\n\r\n        return jsonRequester.get('api/songs/top/' + count, options)\r\n            .then(function (resp) {\r\n                return resp.result;\r\n            });\r\n    }\r\n\r\n    return {\r\n        users: {\r\n            signIn,\r\n            signOut,\r\n            register,\r\n            hasUser,\r\n            get: getUsers\r\n        },\r\n        songs: {\r\n            get: getSongs,\r\n            all: getAllSongs,\r\n            add: addSong,\r\n            getTop: getTopSongs,\r\n            comments: getComments,\r\n            comment: postComment,\r\n            rate: rateSong\r\n        },\r\n        ytData: {\r\n          query\r\n        },\r\n        tests: {\r\n            get: getById,\r\n            del: deleteById,\r\n            comments: getComments,\r\n            comment: postComment,\r\n            rate: rateSong\r\n        }\r\n    };\r\n}());\r\n\r\nexport {dataService};"]}